{"name":"Absolute.js","tagline":"MVC on steroids for JaggeryJS","body":"absolute.js\r\n===========\r\n\r\n> Simple MVC framework created for [JaggeryJS](https://github.com/wso2/jaggery).\r\n\r\nThe objective of absolute.js is to handle front-end development work with simplicity and conventions inside jaggeryJS. So let's get to the facts quick.\r\n\r\n### Simple Configuration\r\nFirst we have to redirect all the requests from jaggery configuration file to a jag file.\r\n**jaggery.conf**\r\n\r\n\t{\r\n\t    \"welcomeFiles\": [\"index.jag\"],\r\n\t    \"urlMappings\": [\r\n\t        {\r\n\t            \"url\": \"/*\",\r\n\t            \"path\": \"/index.jag\"\r\n\t        }\r\n\t    ],\r\n\t    \"logLevel\": \"info\"\r\n\t}\r\nInside the index.jag file we will setup absolute.js and give a configuration. Also note that defaults are handled inside absolute.js. \r\n\r\n**index.jag**\r\n\r\n\t<%\r\n\tvar mvc = require ('absolute.js').mvc;\r\n\tvar mvcp = new mvc({\r\n\t\tSERVER_URL:\"/publisher/\"\r\n\t});\r\n\tmvcp.route(request);\r\n\t%>\r\n\r\n\r\nNow absolute.js is ready for request processing. \r\n\r\n### Conventions\r\nFirst we have to look into the folder layout -\r\n\r\n![Folder Structure](http://i.imgur.com/fs6dnDh.png)\r\n\r\nThe concept of mvc is simple. We have a model, a view and a controller. In our example app we haven't followed a model approach to data (Note: This is also very simple since JSON and database library bridge exists in jaggery).\r\n\r\n#### A Request procedure \r\nThe request comes to the absolute.js module. If the requst URI is - `/publisher/console/list`\r\n\r\n\t*\t`/publisher` is the context of the app\r\n\t*\t`/console` is the controller \r\n\t*\t`/list` is the view \r\n\r\nControllers are contained in the controller folder of the context application. The controller is created with the same name. Inside the controller it will have a function named after the view. absolute.js will execute this function and the return json object will be provided to the template engine.\r\n\r\n**console.js**\r\n\r\n\tlist = function(){\r\n\t\treturn {name:\"Chan\", quote:\"I was a king I had a gold throne\"};\r\n\t}\r\n\tmanager = function(){\r\n\t\t//response.sendRedirect('/publisher/console/list');\r\n\t\treturn {name:\"Chan\", quote:\"I was a king I had a gold throne\"};\r\n\t}\r\n\tupload = function(){\r\n\t\treturn {name:\"Chan\", quote:\"I was a king I had a gold throne\"};\r\n\t}\r\n\r\nI am currently working on the layout and partials handling inside absolute.js. \r\n\r\n\r\nNote:- Initial credit of the idea of building a simple mvc framework for jaggery goes to  [Dilan](https://twitter.com/chatu_dil \"Dilan\")","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}